<project name="AdvancedPowerManagement" basedir="../" default="main">
	<property environment="env" />
	<!-- Properties -->

	<property name="mod.name"            value="AdvancedPowerManagement"/>
	<property name="mod.dir"             value="AdvancedPowerManagement"/>
	<property name="build.dir"           value="${mod.dir}/build"/>
	<property name="src.dir"             value="${mod.dir}/src"/>
	<property name="res.dir"             value="${mod.dir}/resources"/>

	<property name="download.dir"        value="download"/>
	<property name="files.minecraft.dir" value="jars"/>
	<property name="clean_mcp"           value="clean"/>
    
    <property name="clean.name"          value="mcp723_f642445_clean.zip"/>

	<property name="classes.dir"         value="${build.dir}/classes"/>
	<property name="jar.dir"             value="${build.dir}/dist"/>

	<property name="forge.dir"           value="${build.dir}/forge"/>
	<property name="mcp.dir"             value="${forge.dir}/mcp"/>

	<property name="mcpsrc.dir"          value="${mcp.dir}/src/minecraft"/>

	<property name="mcp.version"         value="723"/>
	<property name="forge.version"       value="6.4.2.445"/>
	<property name="mymod.version"       value="1.1"/>
    <property name="ic2.version"         value="IC2_1.110"/>

	<available property="forge-exists" file="${clean_mcp}/${clean.name}"/>
    <target name="abort" unless="forge-exists">
        <fail message="${clean.name} does not exist!" />
    </target>

	<mkdir dir="${download.dir}"/>

	<!-- Targets -->

	<target name="clean">
		<delete dir="${build.dir}"/>
	</target>

	<!-- Set build number -->
	<target name="initialize-version" depends="version-provided,version-not-provided">
		<property name="mymod.version.full"     value="${mymod.version}.${build.number}-${ic2.version}"/>
		<echo message="Starting build for ${mymod.version.full}"/>
	</target>

	<target name="version-not-provided" unless="env.BUILD_NUMBER">
		<buildnumber/>
	</target>

	<target name="version-provided" if="env.BUILD_NUMBER">
		<property name="build.number" value="${env.BUILD_NUMBER}"/>
	</target>

	<!-- Setup mcp and forge -->
	<target name="setup" depends="initialize-version">

		<!-- Unzip them -->
		<unzip dest="${build.dir}">
			<fileset dir="${clean_mcp}">
				<include name="${clean.name}"/>
			</fileset>
		</unzip>

		<!-- Copy MyMod source -->
		<copy todir="${mcpsrc.dir}">
			<fileset dir="${src.dir}/common">
			</fileset>
			<filterset>
                <filter token="VERSION" value="${mymod.version.full}" />
				<filter token="BUILD_NUMBER" value="${build.number}" />
            </filterset>
			
		</copy>
	</target>

	<target name="compile" depends="setup">

		<!-- Recompile -->
		<exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
			<arg line="/c recompile.bat"/>
		</exec>

		<exec dir="${mcp.dir}" executable="sh" osfamily="unix">
			<arg value="recompile.sh" />
		</exec>

		<!-- Reobf -->
		<exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
			<arg line="/c reobfuscate.bat"/>
		</exec>

		<exec dir="${mcp.dir}" executable="sh" osfamily="unix">
			<arg value="reobfuscate.sh" />
		</exec>

		<!-- Copy MyMod classes -->
		<copy todir="${classes.dir}">
			<fileset dir="${mcp.dir}/reobf/minecraft">
                <exclude name="**/ic2/**" />
                <exclude name="**/net/**" />
                <exclude name="**/cpw/**" />
                <exclude name="/*.class" />
            </fileset>
		</copy>

		<!-- Copy common resources -->
		<copy todir="${classes.dir}">
			<fileset dir="${res.dir}/common">
			</fileset>
			<filterset>
                <filter token="VERSION" value="${mymod.version.full}" />
				<filter token="BUILD_NUMBER" value="${build.number}" />
            </filterset>
		</copy>
		
		<!-- Copy documentation -->
		<copy todir="${classes.dir}">
			<fileset file="${mod.dir}/LICENSE.txt">
			</fileset>
			<fileset file="${mod.dir}/README">
			</fileset>
			<filterset>
                <filter token="VERSION" value="${mymod.version.full}" />
				<filter token="BUILD_NUMBER" value="${build.number}" />
            </filterset>
		</copy>

		<!-- Copy client resources -->
		<copy todir="${classes.dir}">
			<fileset dir="${res.dir}/client">
			</fileset>
		</copy>		

	</target>

	<!-- Zip the compiled files -->
	<target name="package" depends="compile">
		<jar destfile="${jar.dir}/${mod.name}-${mymod.version.full}.jar" basedir="${classes.dir}"/>
	</target>

	<!-- Default target to run -->
	<target name="main" depends="abort,initialize-version,clean,package"/>

</project>
