<project name="AdvancedPowerManagement" basedir="../" default="main">
	<property environment="env" />
	<!-- Properties -->

	<property name="mod.name"            value="AdvancedPowerManagement"/>
	<property name="mod.dir"             value="AdvancedPowerManagement"/>
	<property name="build.dir"           value="${mod.dir}/build"/>
	<property name="src.dir"             value="${mod.dir}/src"/>
	<property name="res.dir"             value="${mod.dir}/resources"/>

	<property name="download.dir"        value="download"/>
	    
    <property name="classes.dir"         value="${build.dir}/classes"/>
	<property name="jar.dir"             value="${build.dir}/dist"/>

	<property name="forge.dir"           value="${build.dir}/forge"/>
	<property name="mcp.dir"             value="${forge.dir}/mcp"/>

	<property name="mcpsrc.dir"          value="${mcp.dir}/src/minecraft"/>

	<property name="mcp.version"         value="723"/>
	<property name="forge.version"       value="6.4.2.445"/>
	<property name="mymod.version"       value="1.1"/>
    <property name="ic2.version"         value="IC2_1.110"/>

	<available property="forge-exists" file="${download_dir}/$minecraftforge-src-${forge.version}zip"/>
    <condition property="should-download-ant-contrib">
		<or>
			<available file="${download.dir}/ant-contrib/ant-contrib-1.0b3.jar"/>
			<available file="${download.dir}/minecraftforge-src-${forge.version}.zip"/>
		</or>
	</condition>
    
	<mkdir dir="${download.dir}"/>

	<!-- Targets -->
	<target name="clean">
		<delete dir="${build.dir}"/>
	</target>

	<!-- Set build number -->
	<target name="initialize-version" depends="version-provided,version-not-provided">
		<property name="mymod.version.full"     value="${mymod.version}.${build.number}-${ic2.version}"/>
		<echo message="Starting build for ${mymod.version.full}"/>
	</target>

	<target name="version-not-provided" unless="env.BUILD_NUMBER">
		<buildnumber/>
	</target>

	<target name="version-provided" if="env.BUILD_NUMBER">
		<property name="build.number" value="${env.BUILD_NUMBER}"/>
	</target>

    <!-- Download necessary files -->
	<target name="download-files" depends="download-forge"/>

    <!-- Download ant-contrib, necessary to be able to download forge (only if neither forge zip nor ant-contrib exist) -->
	<target name="download-ant-contrib" unless="should-download-ant-contrib">

		<echo message="Getting: ant-contrib"/>
		<mkdir dir="${download.dir}/tmp"/>

		<get src="http://sourceforge.net/projects/ant-contrib/files/ant-contrib/1.0b3/ant-contrib-1.0b3-bin.zip/download" dest="${download.dir}/tmp/ant-contrib-1.0b3-bin.zip"/>
		<get src="http://archive.apache.org/dist/commons/codec/binaries/commons-codec-1.6-bin.zip" dest="${download.dir}/tmp/commons-codec-1.6-bin.zip"/>

		<unzip src="${download.dir}/tmp/ant-contrib-1.0b3-bin.zip" dest="${download.dir}"/>
		<unzip src="${download.dir}/tmp/commons-codec-1.6-bin.zip" dest="${download.dir}/tmp"/>

		<move todir="${download.dir}/ant-contrib/lib">
			<fileset file="${download.dir}/tmp/commons-codec-1.6/commons-codec-1.6.jar"/>
		</move>

		<!-- Delete useless files -->
		<delete dir="${download.dir}/ant-contrib/docs"/>
		<delete dir="${download.dir}/tmp"/>

	</target>

	<!-- Download forge (if it doesn't exist) -->
	<target name="download-forge" depends="download-ant-contrib" unless="forge-exists" >

		<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<pathelement location="${download.dir}/ant-contrib/ant-contrib-1.0b3.jar"/>
				<fileset dir="${download.dir}/ant-contrib/lib">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</taskdef>

		<getMethod url="http://files.minecraftforge.net/minecraftforge-src-${forge.version}.zip"
				   responseDataFile="${download.dir}/minecraftforge-src-${forge.version}.zip">
			<header name="User-Agent" value="Ant-${ant.version}/${ant.java.version}"/>
		</getMethod>

	</target>
    
	<!-- Setup mcp and forge -->
	<target name="setup" depends="initialize-version">

		<!-- Unzip forge -->
		<unzip dest="${build.dir}">
			<fileset dir="${download_dir}">
				<include name="minecraftforge-src-${forge.version}.zip"/>
			</fileset>
		</unzip>

        <!-- Install forge -->
		<exec dir="${forge.dir}" executable="cmd" osfamily="windows">
			<arg line="/c install.cmd"/>
		</exec>

		<exec dir="${forge.dir}" executable="sh" osfamily="unix">
			<arg value="install.sh" />
		</exec>

        <!-- Copy MyMod source -->
		<copy todir="${mcpsrc.dir}">
			<fileset dir="${src.dir}/common">
			</fileset>
			<filterset>
                <filter token="VERSION" value="${mymod.version.full}" />
				<filter token="BUILD_NUMBER" value="${build.number}" />
            </filterset>
			
		</copy>
	</target>

	<target name="compile" depends="setup">

		<!-- Recompile -->
		<exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
			<arg line="/c recompile.bat"/>
		</exec>

		<exec dir="${mcp.dir}" executable="sh" osfamily="unix">
			<arg value="recompile.sh" />
		</exec>

		<!-- Reobf -->
		<exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
			<arg line="/c reobfuscate.bat"/>
		</exec>

		<exec dir="${mcp.dir}" executable="sh" osfamily="unix">
			<arg value="reobfuscate.sh" />
		</exec>

		<!-- Copy MyMod classes -->
		<copy todir="${classes.dir}">
			<fileset dir="${mcp.dir}/reobf/minecraft">
                <exclude name="**/ic2/**" />
            </fileset>
		</copy>

		<!-- Copy common resources -->
		<copy todir="${classes.dir}">
			<fileset dir="${res.dir}/common">
			</fileset>
			<filterset>
                <filter token="VERSION" value="${mymod.version.full}" />
				<filter token="BUILD_NUMBER" value="${build.number}" />
            </filterset>
		</copy>
		
		<!-- Copy documentation -->
		<copy todir="${classes.dir}">
			<fileset file="${mod.dir}/LICENSE.txt">
			</fileset>
			<fileset file="${mod.dir}/README">
			</fileset>
			<filterset>
                <filter token="VERSION" value="${mymod.version.full}" />
				<filter token="BUILD_NUMBER" value="${build.number}" />
            </filterset>
		</copy>

		<!-- Copy client resources -->
		<copy todir="${classes.dir}">
			<fileset dir="${res.dir}/client">
			</fileset>
		</copy>		

	</target>

	<!-- Zip the compiled files -->
	<target name="package" depends="compile">

		<jar destfile="${jar.dir}/${mod.name}-${mymod.version.full}.jar" basedir="${classes.dir}"/>

	</target>

	<!-- Default target to run -->
	<target name="main" depends="initialize-version,download-files,clean,package"/>

</project>
